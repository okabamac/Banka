{
  "swagger": "2.0",
  "info": {
    "description": "Banka is a lightweight core banking application that powers banking operations like account creation, customer deposit and withdrawals. This app is meant to support a single bank., where users can signup,  and create bank acocunts online, but must visit the branch to withdraw or deposit money.",
    "version": "1.0.0",
    "title": "Banka API"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "API for Auth in the system"
    },
    {
      "name": "Accounts",
      "description": "API for accounts in the system"
    },
    {
      "name": "Transactions",
      "description": "API for Transactions in the system"
    },
    {
      "name": "Users",
      "description": "API for Users in the system"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "host": "banka-ch-api.herokuapp.com",
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign up",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User that need to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/v1/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User that need to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },
    "/api/v1/auth/addUser": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add staff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Staff that need to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/accounts/": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get all accounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create bank account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Clients create bank account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/accounts/{accountNumber}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get specific account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number that need to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Change Account status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Change status to dormant/active",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "type": "integer",
            "description": "Delete bank account",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/accounts/:accountNumber/transactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account transactions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number whose transactions needs to be  fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transactions"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get specific transactions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID that need to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transactions"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/transactions/:accountNumber/credit": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Credit account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Change status to dormant/active",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/transactions/:accountNumber/debit": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Debit a bank account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Change status to dormant/active",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get specific user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a specific user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/users/{email}/accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get specific user accounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Auth": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Auth"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "types": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "accountNumber": {
          "type": "integer",
          "format": "int64"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "integer"
        },
        "types": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Account Status"
        },
        "balance": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Account"
      }
    },
    "Transactions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "types": {
          "type": "string"
        },
        "accountNumber": {
          "type": "integer",
          "format": "int64"
        },
        "cashier": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number"
        },
        "oldBalance": {
          "type": "number"
        },
        "newBalance": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Transactions"
      }
    }
  }
}